version: '3.8'

services:
  postgres:
    build:
      context: ./smart_home
      dockerfile: Dockerfile-postgres
    container_name: smarthome-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: smarthome
    ports:
      - "7432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - smarthome-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 2s
      timeout: 5s
      retries: 3

  temperature-api:
    build:
      context: ./temperature-api
      dockerfile: Dockerfile
#      dockerfile: Dockerfile-local
    ports:
        - "8081:8081"
    restart: unless-stopped
    depends_on:
      - rabbitmq
    networks:
        - smarthome-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - smarthome-network

  telematic-mqtt-service:
      build:
        context: ./telematic-mqtt-service
        dockerfile: Dockerfile
#        dockerfile: Dockerfile-local
      ports:
        - "8082:8082"
      restart: unless-stopped
      depends_on:
        - rabbitmq
      networks:
        - smarthome-network

  device-inventory:
      build:
        context: ./device-inventory
        dockerfile: Dockerfile
      ports:
        - "8083:8083"
      restart: unless-stopped
      depends_on:
        - rabbitmq
      networks:
        - smarthome-network

  app:
    build:
      context: ./smart_home
      dockerfile: Dockerfile
    container_name: smarthome-app
    depends_on:
      postgres:
        condition: service_healthy
      temperature-api:
        condition: service_started
    environment:
      - DATABASE_URL=postgres://postgres:password@postgres:5432/smarthome
      - TEMPERATURE_API_URL=http://temperature-api:8081
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - smarthome-network

volumes:
  postgres_data:

networks:
  smarthome-network:
    driver: bridge